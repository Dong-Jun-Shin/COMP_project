
CREATE  TRIGGER  tD_ACCOUNT AFTER DELETE ON ACCOUNT for each row
-- ERwin Builtin Trigger
-- DELETE trigger on ACCOUNT 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* ACCOUNT  WAREHOUSE on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000b20c", PARENT_OWNER="", PARENT_TABLE="ACCOUNT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_19", FK_COLUMNS="AC_NUM" */
    UPDATE WAREHOUSE
      SET
        /* %SetFK(WAREHOUSE,NULL) */
        WAREHOUSE.AC_NUM = NULL
      WHERE
        /* %JoinFKPK(WAREHOUSE,:%Old," = "," AND") */
        WAREHOUSE.AC_NUM = :old.AC_NUM;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_ACCOUNT AFTER UPDATE ON ACCOUNT for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on ACCOUNT 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ACCOUNT  WAREHOUSE on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0000c89f", PARENT_OWNER="", PARENT_TABLE="ACCOUNT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_19", FK_COLUMNS="AC_NUM" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.AC_NUM <> :new.AC_NUM
  THEN
    UPDATE WAREHOUSE
      SET
        /* %SetFK(WAREHOUSE,NULL) */
        WAREHOUSE.AC_NUM = NULL
      WHERE
        /* %JoinFKPK(WAREHOUSE,:%Old," = ",",") */
        WAREHOUSE.AC_NUM = :old.AC_NUM;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CD_ORDER BEFORE INSERT ON CD_ORDER for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CD_ORDER 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CUSTOMER  CD_ORDER on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="0000dbab", PARENT_OWNER="", PARENT_TABLE="CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="CD_ORDER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_12", FK_COLUMNS="C_NUM" */
    UPDATE CD_ORDER
      SET
        /* %SetFK(CD_ORDER,NULL) */
        CD_ORDER.C_NUM = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM CUSTOMER
            WHERE
              /* %JoinFKPK(:%New,CUSTOMER," = "," AND") */
              :new.C_NUM = CUSTOMER.C_NUM
        ) 
        /* %JoinPKPK(CD_ORDER,:%New," = "," AND") */
         and CD_ORDER.CD_NUM = :new.CD_NUM;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER  tD_CD_ORDER AFTER DELETE ON CD_ORDER for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CD_ORDER 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CD_ORDER  ORDER_CHART on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000b5d5", PARENT_OWNER="", PARENT_TABLE="CD_ORDER"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="CD_NUM" */
    UPDATE ORDER_CHART
      SET
        /* %SetFK(ORDER_CHART,NULL) */
        ORDER_CHART.CD_NUM = NULL
      WHERE
        /* %JoinFKPK(ORDER_CHART,:%Old," = "," AND") */
        ORDER_CHART.CD_NUM = :old.CD_NUM;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CD_ORDER AFTER UPDATE ON CD_ORDER for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CD_ORDER 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CD_ORDER  ORDER_CHART on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0001de66", PARENT_OWNER="", PARENT_TABLE="CD_ORDER"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="CD_NUM" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.CD_NUM <> :new.CD_NUM
  THEN
    UPDATE ORDER_CHART
      SET
        /* %SetFK(ORDER_CHART,NULL) */
        ORDER_CHART.CD_NUM = NULL
      WHERE
        /* %JoinFKPK(ORDER_CHART,:%Old," = ",",") */
        ORDER_CHART.CD_NUM = :old.CD_NUM;
  END IF;

  /* ERwin Builtin Trigger */
  /* CUSTOMER  CD_ORDER on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="CD_ORDER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_12", FK_COLUMNS="C_NUM" */
  SELECT count(*) INTO NUMROWS
    FROM CUSTOMER
    WHERE
      /* %JoinFKPK(:%New,CUSTOMER," = "," AND") */
      :new.C_NUM = CUSTOMER.C_NUM;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.C_NUM IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CD_ORDER because CUSTOMER does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CUSTOMER AFTER DELETE ON CUSTOMER for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CUSTOMER 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CUSTOMER  CD_ORDER on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000ad60", PARENT_OWNER="", PARENT_TABLE="CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="CD_ORDER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_12", FK_COLUMNS="C_NUM" */
    UPDATE CD_ORDER
      SET
        /* %SetFK(CD_ORDER,NULL) */
        CD_ORDER.C_NUM = NULL
      WHERE
        /* %JoinFKPK(CD_ORDER,:%Old," = "," AND") */
        CD_ORDER.C_NUM = :old.C_NUM;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CUSTOMER AFTER UPDATE ON CUSTOMER for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CUSTOMER 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CUSTOMER  CD_ORDER on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0000c6cd", PARENT_OWNER="", PARENT_TABLE="CUSTOMER"
    CHILD_OWNER="", CHILD_TABLE="CD_ORDER"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_12", FK_COLUMNS="C_NUM" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.C_NUM <> :new.C_NUM
  THEN
    UPDATE CD_ORDER
      SET
        /* %SetFK(CD_ORDER,NULL) */
        CD_ORDER.C_NUM = NULL
      WHERE
        /* %JoinFKPK(CD_ORDER,:%Old," = ",",") */
        CD_ORDER.C_NUM = :old.C_NUM;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_ORDER_CHART BEFORE INSERT ON ORDER_CHART for each row
-- ERwin Builtin Trigger
-- INSERT trigger on ORDER_CHART 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CD_ORDER  ORDER_CHART on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="0001d9bd", PARENT_OWNER="", PARENT_TABLE="CD_ORDER"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="CD_NUM" */
    UPDATE ORDER_CHART
      SET
        /* %SetFK(ORDER_CHART,NULL) */
        ORDER_CHART.CD_NUM = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM CD_ORDER
            WHERE
              /* %JoinFKPK(:%New,CD_ORDER," = "," AND") */
              :new.CD_NUM = CD_ORDER.CD_NUM
        ) 
        /* %JoinPKPK(ORDER_CHART,:%New," = "," AND") */
         and ORDER_CHART.CH_NUM = :new.CH_NUM;

    /* ERwin Builtin Trigger */
    /* PRODUCT  ORDER_CHART on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="P_NUM" */
    UPDATE ORDER_CHART
      SET
        /* %SetFK(ORDER_CHART,NULL) */
        ORDER_CHART.P_NUM = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM PRODUCT
            WHERE
              /* %JoinFKPK(:%New,PRODUCT," = "," AND") */
              :new.P_NUM = PRODUCT.P_NUM
        ) 
        /* %JoinPKPK(ORDER_CHART,:%New," = "," AND") */
         and ORDER_CHART.CH_NUM = :new.CH_NUM;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_ORDER_CHART AFTER UPDATE ON ORDER_CHART for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on ORDER_CHART 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CD_ORDER  ORDER_CHART on child update no action */
  /* ERWIN_RELATION:CHECKSUM="0001f9aa", PARENT_OWNER="", PARENT_TABLE="CD_ORDER"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_16", FK_COLUMNS="CD_NUM" */
  SELECT count(*) INTO NUMROWS
    FROM CD_ORDER
    WHERE
      /* %JoinFKPK(:%New,CD_ORDER," = "," AND") */
      :new.CD_NUM = CD_ORDER.CD_NUM;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.CD_NUM IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update ORDER_CHART because CD_ORDER does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* PRODUCT  ORDER_CHART on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="P_NUM" */
  SELECT count(*) INTO NUMROWS
    FROM PRODUCT
    WHERE
      /* %JoinFKPK(:%New,PRODUCT," = "," AND") */
      :new.P_NUM = PRODUCT.P_NUM;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.P_NUM IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update ORDER_CHART because PRODUCT does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_PRODUCT AFTER DELETE ON PRODUCT for each row
-- ERwin Builtin Trigger
-- DELETE trigger on PRODUCT 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* PRODUCT  ORDER_CHART on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00017919", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="P_NUM" */
    UPDATE ORDER_CHART
      SET
        /* %SetFK(ORDER_CHART,NULL) */
        ORDER_CHART.P_NUM = NULL
      WHERE
        /* %JoinFKPK(ORDER_CHART,:%Old," = "," AND") */
        ORDER_CHART.P_NUM = :old.P_NUM;

    /* ERwin Builtin Trigger */
    /* PRODUCT  WAREHOUSE on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_20", FK_COLUMNS="P_NUM" */
    UPDATE WAREHOUSE
      SET
        /* %SetFK(WAREHOUSE,NULL) */
        WAREHOUSE.P_NUM = NULL
      WHERE
        /* %JoinFKPK(WAREHOUSE,:%Old," = "," AND") */
        WAREHOUSE.P_NUM = :old.P_NUM;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_PRODUCT AFTER UPDATE ON PRODUCT for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on PRODUCT 
DECLARE NUMROWS INTEGER;
BEGIN
  /* PRODUCT  ORDER_CHART on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0001b577", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="ORDER_CHART"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_18", FK_COLUMNS="P_NUM" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.P_NUM <> :new.P_NUM
  THEN
    UPDATE ORDER_CHART
      SET
        /* %SetFK(ORDER_CHART,NULL) */
        ORDER_CHART.P_NUM = NULL
      WHERE
        /* %JoinFKPK(ORDER_CHART,:%Old," = ",",") */
        ORDER_CHART.P_NUM = :old.P_NUM;
  END IF;

  /* PRODUCT  WAREHOUSE on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_20", FK_COLUMNS="P_NUM" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.P_NUM <> :new.P_NUM
  THEN
    UPDATE WAREHOUSE
      SET
        /* %SetFK(WAREHOUSE,NULL) */
        WAREHOUSE.P_NUM = NULL
      WHERE
        /* %JoinFKPK(WAREHOUSE,:%Old," = ",",") */
        WAREHOUSE.P_NUM = :old.P_NUM;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_WAREHOUSE BEFORE INSERT ON WAREHOUSE for each row
-- ERwin Builtin Trigger
-- INSERT trigger on WAREHOUSE 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* ACCOUNT  WAREHOUSE on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="0001db5f", PARENT_OWNER="", PARENT_TABLE="ACCOUNT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_19", FK_COLUMNS="AC_NUM" */
    UPDATE WAREHOUSE
      SET
        /* %SetFK(WAREHOUSE,NULL) */
        WAREHOUSE.AC_NUM = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM ACCOUNT
            WHERE
              /* %JoinFKPK(:%New,ACCOUNT," = "," AND") */
              :new.AC_NUM = ACCOUNT.AC_NUM
        ) 
        /* %JoinPKPK(WAREHOUSE,:%New," = "," AND") */
         and WAREHOUSE.WH_NUM = :new.WH_NUM;

    /* ERwin Builtin Trigger */
    /* PRODUCT  WAREHOUSE on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_20", FK_COLUMNS="P_NUM" */
    UPDATE WAREHOUSE
      SET
        /* %SetFK(WAREHOUSE,NULL) */
        WAREHOUSE.P_NUM = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM PRODUCT
            WHERE
              /* %JoinFKPK(:%New,PRODUCT," = "," AND") */
              :new.P_NUM = PRODUCT.P_NUM
        ) 
        /* %JoinPKPK(WAREHOUSE,:%New," = "," AND") */
         and WAREHOUSE.WH_NUM = :new.WH_NUM;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_WAREHOUSE AFTER UPDATE ON WAREHOUSE for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on WAREHOUSE 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* ACCOUNT  WAREHOUSE on child update no action */
  /* ERWIN_RELATION:CHECKSUM="0001f330", PARENT_OWNER="", PARENT_TABLE="ACCOUNT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_19", FK_COLUMNS="AC_NUM" */
  SELECT count(*) INTO NUMROWS
    FROM ACCOUNT
    WHERE
      /* %JoinFKPK(:%New,ACCOUNT," = "," AND") */
      :new.AC_NUM = ACCOUNT.AC_NUM;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.AC_NUM IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update WAREHOUSE because ACCOUNT does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* PRODUCT  WAREHOUSE on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="PRODUCT"
    CHILD_OWNER="", CHILD_TABLE="WAREHOUSE"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_20", FK_COLUMNS="P_NUM" */
  SELECT count(*) INTO NUMROWS
    FROM PRODUCT
    WHERE
      /* %JoinFKPK(:%New,PRODUCT," = "," AND") */
      :new.P_NUM = PRODUCT.P_NUM;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.P_NUM IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update WAREHOUSE because PRODUCT does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/